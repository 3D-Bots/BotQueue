v1 Release

* Website:

  * Nice looking template

  * Install
  	* 100% working Amazon bootup script.

	* Queue Functionality:
		* reordering of job priorities
		* canceling of a job
		* uploading a new file
		* statistics (% pass / fail, # of hours, etc)
	  * Add public / private queues.  Default to private.


	* Job / File functionality
		* re-print job
		* cancel job
		* select quantity during upload
		* select queue during upload
		* job view
		* job edit?
		
	* Machine areas
		* current status
		* toggle online/offline
		* statistics (% pass / fail, # of hours, etc)
		* mini-dashboard with machine vitals

  * Add activity logs to various job steps

* API
	* OAuth flow for apps to register and get active.
		* double check flow through oauth - try to break it.
		* verify function calls and other cruft from imported oauth library
	* API Calls:
		* Workers can grab jobs.
		* Workers can finish jobs.
		* Workers can update status with a percentage and short log?
		* Get information on a job.
		* Get a list of user machines
		* Get a list of user queues
		* Get a list of jobs in a queue
			* active
			* pending
			* completed
			* failed

* App
	* Basic Daemon for mac / win / linux
	* Driver based system for controlling multiple types of machines.
		* Use pronterface backend for reprap / gcode style machines
		* Use s3g python interface for MakerBot machines
		* Use pronterface for smoothie style machines?  TBD
	* App will pull down a list of machines and look for those.
	* If new machines are found, it will prompt the user to register them.
	* Allow user to manually add new machines & configure them (serial port, speed, etc)
	* Allow toggling machine between online/offline states
		* Online = ready to take jobs
		* Offline = does not take jobs
	* Allow pausing / canceling of print jobs.

v2 Release

* Slicers + Profiles
* API to upload files or jobs
* Pull in files from internet (Thingiverse, GrabCAD, etc)
* Remove/lower Amazon requirements for non-amazon / non-public installs.
* Private jobs.